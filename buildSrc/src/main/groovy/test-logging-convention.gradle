import org.gradle.internal.logging.text.StyledTextOutput
import org.gradle.internal.logging.text.StyledTextOutputFactory

plugins {
    id "com.adarshr.test-logger"
}

testlogger {
    theme 'standard'
    showExceptions true
    showStackTraces true
    showFullStackTraces project.hasProperty("full")
    showCauses true
    slowThreshold 2000
    showSummary true
    showSimpleNames false
    showPassed true
    showSkipped true
    showFailed true
    showOnlySlow false
    showStandardStreams project.hasProperty("full")
    showPassedStandardStreams false
    showSkippedStandardStreams false
    showFailedStandardStreams project.hasProperty("full")
    logLevel 'lifecycle'
}

tasks.withType(Test) {
    ext.failedTests = []

    afterTest { descriptor, result ->
        if (result.resultType == TestResult.ResultType.FAILURE) {
            String failedTest = "${descriptor.className}::${descriptor.name}"
            logger.debug("Adding " + failedTest + " to failedTests...")
            failedTests << failedTest
        }
    }

    afterSuite { suite, result ->
        // will match the outermost suite
        if (!suite.parent) {
            if (!failedTests.empty) {
                def out = services.get(StyledTextOutputFactory)
                        .create("test-ouput")
                        .style(StyledTextOutput.Style.Failure)

                out.text("Failed tests:").println()
                failedTests.each { failedTest ->
                    out.text("${failedTest}").println()
                }
            }
        }
    }
}
